map $http_upgrade $connection_upgrade {
  default upgrade;
  ''	  close;
}

resolver 127.0.0.11;

server {
  listen 80;
  server_name netdata.schlickster.us;
#  ssl_certificate https/netdata-fullchain.pem;
#  ssl_certificate_key https/netdata-privkey.pem;

  location /.well-known {
    alias /usr/share/nginx/html/.well-known;
  }

  set $netstat 192.168.3.143:19999;

  location / {
    proxy_pass http://$netstat/;
  }
}

server {
  listen 443 ssl;
  server_name plex.schlickster.us;
  ssl_certificate https/plex-fullchain.pem;
  ssl_certificate_key https/plex-privkey.pem;

  location /.well-known {
    alias /usr/share/nginx/html/.well-known;
  }

  gzip on;
  gzip_vary on;
  gzip_min_length 1000;
  gzip_proxied any;
  gzip_types text/plain text/css text/xml application/xml text/javascript application/x-javascript image/svg+xml;
  gzip_disable "MSIE [1-6]\.";

  # Forward real ip and host to Plex
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  #When using ngx_http_realip_module change $proxy_add_x_forwarded_for to '$http_x_forwarded_for,$realip_remote_addr'
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
  proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
  proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;

  # Websockets
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "Upgrade";

  # Buffering off send to the client as soon as the data is received from Plex.
  proxy_redirect off;
  proxy_buffering off;

  set $plex plex;

  location / {
    proxy_pass http://$plex:32400;
  }
}

#server {
#  listen 443 ssl;
#  server_name schlickster.us www.schlickster.us;
#  ssl_certificate https/fullchain.pem;
#  ssl_certificate_key https/privkey.pem;

#  location /.well-known {
#    alias /usr/share/nginx/html/.well-known;
#  }
#}

server {
  listen 443 ssl;
  server_name prowlarr.schlickster.us;
  ssl_certificate https/wildcard-fullchain.pem;
  ssl_certificate_key https/wildcard-privkey.pem;

  set $prowlarr prowlarr;

  location / {
    proxy_pass http://$prowlarr:9696;

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
  }
}

server {
  listen 443 ssl;
  server_name radarr.schlickster.us;
  ssl_certificate https/wildcard-fullchain.pem;
  ssl_certificate_key https/wildcard-privkey.pem;

  set $radarr radarr;

  location / {
    proxy_pass http://$radarr:7878;

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
  }
}

server {
  listen 443 ssl;
  server_name sonarr.schlickster.us;
  ssl_certificate https/wildcard-fullchain.pem;
  ssl_certificate_key https/wildcard-privkey.pem;

  set $sonarr sonarr;

  location / {
    proxy_pass http://$sonarr:8989;

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
  }
}

server {
  listen 443 ssl;
  server_name lidarr.schlickster.us;
  ssl_certificate https/wildcard-fullchain.pem;
  ssl_certificate_key https/wildcard-privkey.pem;

  set $lidarr lidarr;

  location / {
    proxy_pass http://$lidarr:8686;

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
  }
}

server {
  listen 443 ssl;
  server_name qbittorrent.schlickster.us;
  ssl_certificate https/wildcard-fullchain.pem;
  ssl_certificate_key https/wildcard-privkey.pem;

  set $qbittorrent qbittorrent;

  location / {
    proxy_pass http://$qbittorrent:8080;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_redirect off;
    proxy_set_header X-Real-IP  $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-Port $server_port;
    proxy_set_header X-Real-Scheme $scheme;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Ssl on;
  }
}

server {
  listen 443 ssl;
  server_name did-i.com www.did-i.com;
  ssl_certificate https/didi-fullchain.pem;
  ssl_certificate_key https/didi-privkey.pem;

  location /.well-known {
    alias /usr/share/nginx/html/.well-known;
  }

  set $didi http://didi-app-1:3000/;

  location / {
    proxy_pass $didi$request_uri;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_redirect off;
    proxy_set_header X-Real-IP  $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-Port $server_port;
    proxy_set_header X-Real-Scheme $scheme;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Ssl on;
  }
}
